const app=new Vue({el:"#app",data:{site_settings:{site_name:"Offico score"},timeframe:Date.now(),settings:{steam_id:"76561198020969037",matches_count:"50",hours_minus:14,num_players:2},endpoints:{last_matches:"https://aoe2.net/api/player/matches?game=aoe2de"},last_matches:[],score:{wins:0,losses:0,missing:!1,elo_change:0},is_loading:is_loading=!1,current_match:{active:!1,players:[]},periodic_check:{timer:!1,interval:3e4}},created(){this.get_url_info(),this.change_hours(),this.get_score(),this.start_periodic_check()},computed:{last_matches_url:function(){return`${this.endpoints.last_matches}&steam_id=${this.settings.steam_id}&count=${this.settings.matches_count}`}},methods:{get_url_info(){const e=new URL(window.location.href),t=new URLSearchParams(e.search),s=["steam_id","hours_minus","matches_count","num_players"];for(let e of s)t.has(e)&&(this.settings[e]=t.get(e))},change_hours(){const e=this.settings.hours_minus,t=new Date(this.timeframe);t.setHours(t.getHours()-e),this.timeframe=Date.parse(t)},async get_last_matches(){const e=await fetch(this.last_matches_url),t=await e.json();return this.last_matches=t,t},get_score(){this.get_last_matches().then(e=>{if(e.length<1)console.log("matches not found");else{this.reset_settings();for(let t=0;t<e.length;t++){const s=e[t],i=(s.started,1e3*s.finished),a=s.players;if(s.num_players==this.settings.num_players)if(0!=i){if(!(i<this.timeframe))if(null!=a[0].won)for(let e=0;e<a.length;e++){const t=a[e];t.steam_id==this.settings.steam_id&&(this.score.elo_change+=t.rating_change,t.won?this.score.wins++:this.score.losses++)}else this.score.missing=!0}else this.current_match.active=!0,this.current_match.players=a}this.loading=!1}})},reset_settings(){this.score.wins=0,this.score.losses=0,this.score.elo_change=0,this.score.missing=!1,this.current_match.active=!1},refresh_data(){this.loading||(this.loading=!0,this.get_score())},start_periodic_check(){this.periodic_check.timer||(this.periodic_check.timer=setInterval(()=>{this.refresh_data()},this.periodic_check.interval))},stop_periodic_check(){clearInterval(this.periodic_check.timer),this.periodic_check.timer=!1}}});